/**
 * 组合模式：属于结构型模式。
 * 主要针对【树形结构】的数据，使得客户端可以用统一的方式处理部分对象和整体对象
 * 包括叶子构件角色、容器构件角色、抽象构件角色
 * 		叶子(Leaf)构件角色：无子节点；
 * 		容器(Composite)构件角色：有容器特征，可以包含节点；
 * 		抽象(Component)构件角色：定义了叶子构件和容器构建的共同点，从而可以让客户端以统一的方式处理；
 * 
 * - 组合模式为处理树形结构提供了完美的解决方案，描述了如何将容器和叶子进行递归组合，
 * 使得用户在使用时可以一致性的对待容器和叶子。
 * - 当容器对象的指定方法被调用时，将遍历整个树形结构，寻找也包含这个方法的成员，
 * 并调用执行。其中，使用了【递归调用】的机制对整个结构进行处理。
 */
package t07_composite;